services:
  backend:
    env_file:
      - ./backend/.env.local
    image: critique-api-backend
    build: 
      context: ./backend/
      dockerfile: backend.Dockerfile
    ports:
      - 8081:8080
    environment:
      PYTHONUNBUFFERED: 1  # This ensures Python output is sent straight to the container log
    restart: "no"  # Don't restart if tests fail
##the following portion of the file can be commented out if you want to run the backend without testing ## 
    depends_on:
      test:
        condition: service_completed_successfully

  test:
    build:
      context: ./backend/
      dockerfile: test.Dockerfile
    env_file:
      - ./backend/.env.local
    environment:
      PYTHONUNBUFFERED: 1
      DB_URL: postgres:postgres@test_db:5432/postgres
    depends_on:
      test_db:
        condition: service_healthy

  test_db:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres #this password can be insecure because this dummy db is instantiated for testing purposes
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ./backend/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: "no"  # Don't restart when container stops

